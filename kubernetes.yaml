---
apiVersion: apps/v1
kind: Deployment                             # Type of Kubernetes resource
metadata:
  name: go-app                               # Name of the Kubernetes resource to be created in the Kubernetes cluster
spec:
  replicas: 3                                # Number of pods to run at any given time in the Kubernetes cluster
  selector:
    matchLabels:
      app: go-app                            # This deployment applies to any Pods matching the specified label
  template:
    metadata:
      labels:                                # The labels that will be applied to all pods in this deployment
        app: go-app 
    spec:
      containers:
      - name: go-app                         # The name of the go application container
        image: Filipeb99/go-app:latest       # The docker image for building the go application container
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000                # The port for the go application container
        
#livenessProbe:           # To check the health of the Pod
#  httpGet:
#    path: /health
#    port: 8000
#    scheme: HTTP
#  initialDelaySeconds: 5
#  periodSeconds: 15
#  timeoutSeconds: 5
#readinessProbe:          # To check if the Pod is ready to serve traffic or not
#  httpGet:
#    path: /readiness
#    port: 8000
#    scheme: HTTP
#  initialDelaySeconds: 5
#  timeoutSeconds: 1    

---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: go-app-service           # The name of the Kubernetes Service to be created in the Kubernetes cluster
spec: 
  type: NodePort                 # A port is opened on each node in your cluster via Kube proxy.
  ports:                         # Take incoming HTTP requests on port 9000 and forward them to the targetPort of 8000
  - name: http
    port: 9000
    targetPort: 8000
  selector:
    app: go-app
